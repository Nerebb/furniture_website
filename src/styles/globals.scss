//root config

// config VScode Usersetting to eliminate Unknow at rule @apply
// "scss.lint.unknownAtRules": "ignore"

.glow-effect {
  --glow-line-color: #94B8D7;
  --glow-line-color2: #E1F4DC;
  --glow-line-width: 1px;
  --glow-blur-color: #94B8D7;
  --glow-blur-color2: #3A832A;
  --glow-blur-width: 3px;
  --glow-duration: 2000ms;
  --glow-line-length: 20px;
  --glow-offset: 0px;
  // just for calc same variable
  --container-offset: 50px;
  position: relative;

  font-weight: 500;
  // color: white;
  background-image: linear-gradient(to bottom right, var(--glow-line-color), var(--glow-line-color2));

  &.noBg {
    // color: black;
    background-image: none;
  }

  .glow-container {
    pointer-events: none;
    width: calc(100% + var(--container-offset));
    height: calc(100% + var(--container-offset));
    opacity: 0;

    position: absolute;
    inset: calc(var(--container-offset) / -2);

    .glow-blur,
    .glow-line {
      width: calc(100% - var(--container-offset) + var(--glow-offset));
      height: calc(100% - var(--container-offset) + var(--glow-offset));
      x: calc((var(--container-offset) / 2) + calc(var(--glow-offset) / -2));
      y: calc((var(--container-offset) / 2) + calc(var(--glow-offset) / -2));
      fill: transparent;
      stroke-dasharray: var(--glow-line-length) calc(50px - var(--glow-line-length));
    }

    .glow-line {
      stroke-width: var(--glow-line-width);
    }

    .glow-blur {
      stroke-width: var(--glow-blur-width);
      filter: blur(var(--glow-blur-width));
    }
  }

  &:hover {

    .glow-blur,
    .glow-line {
      stroke-dashoffset: -90px;
      transition: stroke-dashoffset var(--glow-duration) ease-in;
      animation: glow-stroke var(--glow-duration);
    }
  }

  &:is(:hover, :focus) .glow-container {
    animation: glow-effect var(--glow-duration);
  }

  &.noAnimation {
    --glow-line-length: 50px;
  }

  &.offset {
    --glow-offset: 10px;
  }

  @keyframes glow-stroke {

    0%,
    25%,
    80%,
    100% {
      stroke: var(--glow-line-color);
    }

    50%,
    60% {
      stroke: var(--glow-line-color2);
    }
  }


}

.shim-blue {
  @apply bg-priBlue-300;
  position: relative;
  overflow: hidden;

  &::after {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    transform: translateX(-100%);
    background-image: linear-gradient(90deg,
        rgba(233, 233, 233, 1) 0,
        rgba(233, 233, 233, 0.9) 50%,
        rgba(233, 233, 233, 0.8) 100%);
    animation: shimmer 2.5s ease-out infinite;
    content: "";
  }
}

input[type=number].noSpin {

  // Firefox
  & {
    -moz-appearance: textfield;
    appearance: none;
  }

  //Chrome and chronium
  &::-webkit-outer-spin-button,
  &::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0
  }
}

.flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@layer components {

  .img-contain-w {
    @apply w-full h-auto object-contain
  }

  .bold-Underline {
    @apply text-black font-semibold underline
  }

  .customScrollbar {
    @apply scrollbar-thin scrollbar-track-priBlack-200/50 scrollbar-thumb-priBlue-300
  }
}

.hideScrollbar {
  /* IE and Edge */
  -ms-overflow-style: none;

  /* Firefox */
  scrollbar-width: none;

  /* Safari and Chrome */
  &::-webkit-scrollbar {
    display: none
  }
}

//------------------------------------Keyframes-----------------------------------------

@keyframes glow-effect {
  0% {
    opacity: 0
  }

  25% {
    opacity: 1
  }

  75% {
    opacity: 1
  }

  100% {
    opacity: 0
  }
}

@keyframes shimmer {
  100% {
    transform: translateX(0%);
    opacity: 0;
  }
}